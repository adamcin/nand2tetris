// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh, sel=address[6..8]);

        RAM64(in=in, out=ora, load=loada, address=address[0..5]);
        RAM64(in=in, out=orb, load=loadb, address=address[0..5]);
        RAM64(in=in, out=orc, load=loadc, address=address[0..5]);
        RAM64(in=in, out=ord, load=loadd, address=address[0..5]);
        RAM64(in=in, out=ore, load=loade, address=address[0..5]);
        RAM64(in=in, out=orf, load=loadf, address=address[0..5]);
        RAM64(in=in, out=org, load=loadg, address=address[0..5]);
        RAM64(in=in, out=orh, load=loadh, address=address[0..5]);
        
        Mux8Way16(a=ora, b=orb, c=orc, d=ord, e=ore, f=orf, g=org, h=orh, sel=address[6..8], out=out);
}